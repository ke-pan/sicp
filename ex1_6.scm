(define (average x y)
  (/ (+ x y) 2))
(define (improve guess x)
  (average (/ x guess) guess))
(define (good-enough guess x)
  (< (abs (- (square guess) x)) 0.001))
(define (new-if condition x y)
  (cond (condition x)
        (else y)
  )
)
(define (sqrt-iter guess x)
  (new-if (good-enough guess x)
      guess
      (sqrt-iter (improve guess x) x)))

(sqrt-iter 1.0 9)
